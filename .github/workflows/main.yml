name: Setup ngrok and Remote Desktop

on:
  workflow_dispatch:

jobs:
  setup-ngrok:
    runs-on: windows-latest
    timeout-minutes: 360
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Download ngrok
        shell: powershell
        run: |
          Invoke-WebRequest https://bin.equinox.io/c/bNyj1mQVY4c/ngrok-v3-stable-windows-amd64.zip -OutFile ngrok.zip
          Expand-Archive ngrok.zip -DestinationPath .
          if (!(Test-Path -Path .\ngrok.exe)) { throw "Ngrok extraction failed" }

      - name: Add ngrok to PATH
        shell: powershell
        run: |
          $env:PATH += ";$PWD"
          echo "Ngrok path added"

      - name: Authenticate ngrok
        shell: powershell
        run: .\ngrok.exe authtoken $Env:NGROK_AUTH_TOKEN
        env:
          NGROK_AUTH_TOKEN: ${{ secrets.NGROK_AUTH_TOKEN }}

      - name: Enable Remote Desktop
        shell: powershell
        run: |
          Set-ItemProperty -Path "HKLM:\System\CurrentControlSet\Control\Terminal Server" -Name "fDenyTSConnections" -Value 0
          Enable-NetFirewallRule -DisplayGroup "Remote Desktop"
          net user runneradmin "P@ssw0rd!" /add
          net localgroup administrators runneradmin /add

      - name: Start ngrok tunnel
        shell: powershell
        run: Start-Process -NoNewWindow .\ngrok.exe "tcp 3389"

      - name: Keep workflow alive
        shell: powershell
        run: |
          Write-Output "Ngrok tunnel started. Workflow will stay alive."
          while ($true) { Start-Sleep -Seconds 300 }
        continue-on-error: true
